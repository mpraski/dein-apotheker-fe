@import "responsive.scss";

@mixin horizontal-list($justify: flex-end, $wrap: wrap) {
    display: flex;
    flex-direction: row;
    justify-content: $justify;
    flex-wrap: $wrap;
    box-sizing: content-box;
}

@mixin vertical-list($align: inherit, $wrap: nowrap) {
    display: flex;
    flex-direction: column;
    align-items: $align;
    flex-wrap: $wrap;
    box-sizing: content-box;
}

@mixin actionable($color: $borderColor, $disabled: $borderColor) {
    cursor: pointer;

    @extend .transitionable;

    &:hover {
        border-color: $color;
        background-color: $color;
    }

    &:active {
        border-color: darken($color, 10%);
        background-color: darken($color, 10%);
    }

    &.disabled {
        background-color: $disabled;
        color: $textColorSecondary;
        cursor: not-allowed;

        &:hover {
            background-color: $disabled;
        }

        &:active {
            border-color: $disabled;
            background-color: $disabled;
        }
    }
}

@mixin bordered($radius: $borderRadius, $style: $borderStyle, $width: $borderWidth, $color: transparent) {
    border-radius: $radius;
    border-style: $style;
    border-width: $width;
    border-color: $color;
}

@mixin responsive-text(
    $baseSize: $textSize,
    $baseLine: $lineHeight,
    $baseFamily: $fontFamily,
    $baseWeight: $fontWeight
) {
    font-family: $baseFamily;
    font-weight: $baseWeight;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    font-size: $baseSize * 1.125;
    line-height: $baseLine * 1.125;

    @include respond-to(medium) {
        font-size: $baseSize * 1.5;
        line-height: $baseLine * 1.25;
    }
}

@mixin padded-m($horizontal: true, $vertical: true) {
    @if $horizontal {
        padding-left: $paddingButtonHorizontal;
        padding-right: $paddingButtonHorizontal;

        @include respond-to(medium) {
            padding-left: $paddingButtonHorizontal;
            padding-right: $paddingButtonHorizontal;
        }

        @include respond-to(large) {
            padding-left: $paddingButtonHorizontalLarge;
            padding-right: $paddingButtonHorizontalLarge;
        }
    }

    @if $vertical {
        padding-top: $paddingButtonVertical;
        padding-bottom: $paddingButtonVertical;

        @include respond-to(medium) {
            padding-top: $paddingButtonVertical;
            padding-bottom: $paddingButtonVertical;
        }

        @include respond-to(large) {
            padding-top: $paddingButtonVerticalLarge;
            padding-bottom: $paddingButtonVerticalLarge;
        }
    }
}

@mixin margin-left-m() {
    margin-left: $marginButton;

    @include respond-to(medium) {
        margin-left: $marginButton;
    }

    @include respond-to(large) {
        margin-left: $marginButtonLarge;
    }
}

@mixin margin-bottom-m() {
    margin-bottom: $marginButton;

    @include respond-to(medium) {
        margin-bottom: $marginButton;
    }

    @include respond-to(large) {
        margin-bottom: $marginButtonLarge;
    }
}

.elevated {
    box-shadow: $boxShadowSmall;
}

.transitionable {
    transition: all $animationDuration;
    transition-delay: $animationDelay;
}

.alignable {
    &.right {
        align-self: flex-end;
    }

    &.left {
        align-self: flex-start;
    }
}

.limited-width {
    max-width: $bubbleMaxWidthSmall;

    @include respond-to(small) {
        max-width: $bubbleMaxWidth;
    }
}

.bubble {
    @include bordered;
    @extend .alignable;
    @extend .elevated;

    color: $textColor;
    border-color: $borderColor;
    background-color: $backgroundColor;

    text-align: left;
    user-select: none;

    &.right {
        align-self: flex-end;
        border: none;
        border-bottom-right-radius: $borderRadiusSmall;
        background: $accentGradient;
        //color: white;
        box-shadow: none;
    }

    &.left {
        border-bottom-left-radius: $borderRadiusSmall;
        align-self: flex-start;
    }
}

.padded {
    padding: $paddingButton;

    @include respond-to(medium) {
        padding: $paddingButton;
    }

    @include respond-to(large) {
        padding: $paddingButtonLarge;
    }
}

.margin-left {
    margin-left: $marginButton;

    @include respond-to(medium) {
        margin-left: $marginButton;
    }

    @include respond-to(large) {
        margin-left: $marginButtonLarge;
    }
}

.option {
    @include bordered($borderRadiusHuge, solid, $borderWidthAction, $accentColorDarkest);
    @extend .padded;
    @extend .transitionable;

    color: $accentColorDarkest;
    cursor: pointer;
    user-select: none;

    &:hover {
        @extend .elevated;
    }
}

.centered {
    margin-left: auto;
    margin-right: auto;
}

@mixin big-icon($size: 1.5rem) {
    cursor: pointer;
    height: $size;
    width: $size;
    color: $textColorSecondary;

    & > .material-design-icon__svg {
        height: $size;
        width: $size;
        bottom: 0;
    }
}
